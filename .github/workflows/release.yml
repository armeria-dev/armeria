name: Deploy
on: release
jobs:
  filter:
    name: Filter only published releases
    runs-on: ubuntu-latest
    steps:
      - name: Filter release events
        uses: actions/bin/filter@master
        with:
          args: action published

  prepare:
    name: Prepare armeria.io
    runs-on: ubuntu-latest
    steps:
#      - name: Dump GitHub context
#        env:
#          GITHUB_CONTEXT: ${{ toJson(github) }}
#        run: echo "$GITHUB_CONTEXT"

      - name: Clear out client directory
        if: github.event.action == 'published'
        uses: appleboy/ssh-action@master
        env:
          HOST: armeria.io
          USERNAME: root
          KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
          SCRIPT: rm -rf /opt/armeria/client/*

      - name: Shut down armeria
        uses: appleboy/ssh-action@master
        env:
          HOST: armeria.io
          USERNAME: root
          KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
          SCRIPT: systemctl stop armeria

      - name: Delete armeria binary
        uses: appleboy/ssh-action@master
        env:
          HOST: armeria.io
          USERNAME: root
          KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
          SCRIPT: rm -f /opt/armeria/armeria

  deploy_server:
    name: Build and deploy server
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Set up go 1.12
        uses: actions/setup-go@v1
        with:
          go-version: 1.12
        id: go

      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Build server binary
        run: go build -o armeria cmd/armeria/main.go

      - name: Copy server binary to armeria.io
        uses: appleboy/scp-action@master
        env:
          HOST: armeria.io
          USERNAME: root
          KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
          SOURCE: armeria
          TARGET: /opt/armeria

      - name: Copy config files to armeria.io
        uses: appleboy/scp-action@master
        env:
          HOST: armeria.io
          USERNAME: root
          KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
          SOURCE: config/*
          TARGET: /opt/armeria

  deploy_client:
    name: Build and deploy client
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Set up Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
        id: node

      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Install dependencies
        run: yarn install
        working-directory: client

      - name: Build client
        run: yarn build
        working-directory: client

      - name: Copy client files to armeria.io
        uses: appleboy/scp-action@master
        env:
          HOST: armeria.io
          USERNAME: root
          KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
          SOURCE: client/dist/*
          TARGET: /opt/armeria

  roll_server:
    name: Roll server
    needs: [deploy_server, deploy_client]
    runs-on: ubuntu-latest
    steps:
      - name: Run migrations (if any)
        uses: appleboy/ssh-action@master
        env:
          HOST: armeria.io
          USERNAME: root
          KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
          SCRIPT: /opt/armeria/armeria -config=/opt/armeria/config/production.yml -migrate

      - name: Start up armeria
        uses: appleboy/ssh-action@master
        env:
          HOST: armeria.io
          USERNAME: root
          KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
          SCRIPT: systemctl start armeria